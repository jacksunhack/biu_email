name: Build and Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: jacksunhack/biu_email
  GO_VERSION: '1.22'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      
      - name: Create dist directory
        run: mkdir -p dist
      
      - name: Build binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o dist/biu_email_linux_amd64
          GOOS=linux GOARCH=arm64 go build -o dist/biu_email_linux_arm64
          GOOS=windows GOARCH=amd64 go build -o dist/biu_email_windows_amd64.exe

      - name: List artifacts
        run: ls -la dist/

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/
          if-no-files-found: error

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    needs: build
    runs-on: ubuntu-latest
    # Run this job only when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # Needed to create releases

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: List downloaded artifacts
        run: ls -R artifacts/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # This creates a draft release. Set to false to publish automatically.
          draft: false 
          # Prerelease marks the release as not ready for production. Set to false for stable releases.
          prerelease: false 
          # The token is automatically provided by GitHub Actions.
          # token: ${{ secrets.GITHUB_TOKEN }} 
          files: |
            artifacts/binaries/biu_email_linux_amd64
            artifacts/binaries/biu_email_linux_arm64
            artifacts/binaries/biu_email_windows_amd64.exe