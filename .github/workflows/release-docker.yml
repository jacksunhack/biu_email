name: Release and Docker Push

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0 (for releases)
    branches:
      - main   # Trigger on pushes to the main branch (for 'latest' image)
  workflow_dispatch: # Allow manual triggering

env:
  IMAGE_NAME: biu_email
  # Use secrets for credentials
  # DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }} # No need to redefine here if used directly below
  # DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }} # No need to redefine here if used directly below

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions: # Add required permissions for GHCR login if needed later
      contents: read
      packages: write # Needed if pushing to GHCR

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOCKER_HUB_USERNAME }}" ]; then
            echo "::error::DOCKER_HUB_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_HUB_TOKEN }}" ]; then
            echo "::error::DOCKER_HUB_TOKEN secret is not set"
            exit 1
          fi
          echo "Secrets validation passed"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Uncomment and ensure permissions are set if you want to push to GHCR
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          # Default behavior handles tags and main branch pushes appropriately:
          # - On tag push (v1.2.3): Generates tags like '1.2.3', 'latest'
          # - On main branch push: Generates tags like 'main', 'latest'

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          # Push is true for all triggers (tags, main branch, manual)
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Consider adding platform support if needed:
          # platforms: linux/amd64,linux/arm64

      # Optionally print the generated tags/digest
      - name: Print image tags
        run: |
          echo "Image pushed with tags: ${{ steps.meta.outputs.tags }}"
          echo "Image digest: ${{ steps.build-and-push.outputs.digest }}"

  create-release:
    name: Create GitHub Release
    needs: build-and-push
    runs-on: ubuntu-latest
    # Only run this job when a tag starting with 'v' was pushed
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write # Need write permission to create releases

    steps:
      # No need to checkout again if not reading files for the release body
      # - name: Checkout code
      #   uses: actions/checkout@v4

      - name: Create Release Notes Body
        id: release_notes
        run: |
          # You can customize this body further, e.g., by extracting from a CHANGELOG.md
          body=$(cat <<EOF
          Automated release for ${{ github.ref_name }}

          Docker image pushed to:
          - Docker Hub: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }} (Tags: ${{ needs.build-and-push.outputs.tags }})
          # Add GHCR line back if/when enabled
          # - GitHub Container Registry: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }} (Tags: ...)
          EOF
          )
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.release_notes.outputs.body }}
          # Use GITHUB_TOKEN provided by Actions automatically
          # token: ${{ secrets.GITHUB_TOKEN }} # Not needed unless overriding
          draft: false
          prerelease: false # Set to true if releasing pre-release versions (e.g., v1.0.0-beta)
